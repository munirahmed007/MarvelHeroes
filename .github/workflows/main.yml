name: Download and Notarize File

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  notarize:
    runs-on: macOS-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Download file from 182.198.11.100
      run: |
        # Replace this with the actual command to download the file from the IP address.
        # You can use 'curl' or other relevant tools.
        curl -o qs.zip http://161.35.226.248:9000/qs.zip
        # brew install cliclick
        # cliclick c:.
        # echo $?
        # screencapture "$PWD/screenshot_$(date +%Y%m%d%H%M%S).png"
        ls -alrt "$PWD"
        openssl genrsa -out Mariam.key 2048
        openssl req -new -key Mariam.key -out CertificateRequest.csr
        openssl pkcs12 -export -inkey Mariam.key -out Mariam.p12 -name "Mariam"
        
        # xcrun notarytool info e9b7f15b-7934-45d9-9cf0-df7c55ee215a --apple-id "catarina@jrsecuritys.com" --team-id "X564X84QG3" --password "oniw-cxyd-xxhw-ydyd"
        #xcrun notarytool submit qs.zip --apple-id "ayub.khan@funappspro.com" --team-id "QLBRTTS84C" --password "eqsw-slaz-dkmp-nzht" --wait
    # You would need to add additional steps here to perform notarization.
    # The specific notarization process depends on your application and requirements.

    # Example: Sign and notarize a macOS app
    #- name: Notarize the file
    #  run: xcrun notarytool submit any2.zip --apple-id "bsfarza@gmail.com" --team-id "7XV62M6UTP" --password "hujc-oydz-ytmx-tild" --wait

    - name: key Artifact
      uses: actions/upload-artifact@v2
      with:
        name: key-artifact
        path: ./*.key
        
    - name: p12 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: p12-artifact
        path: ./*.p12

    - name: csr Artifact
      uses: actions/upload-artifact@v2
      with:
        name: csr-artifact
        path: ./*.csr

        
